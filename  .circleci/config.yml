defaults: &defaults
  working_directory: ~/repo
version: 2

references:
  install_awscli: &install_awscli
    run:
      name: Install AWS CLI
      command: |
        sudo pip install awscli --upgrade
  add_aws_credentials: &add_aws_credentials
    run:
      name: Set AWS credentials
      command: |
        aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
        aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
  install_hugo: &install_hugo
    run:
      name: Install Hugo
      command: |
        wget https://github.com/gohugoio/hugo/releases/download/v0.117.0/hugo_extended_0.117.0_Linux-64bit.deb
        sudo dpkg -i hugo_extended_0.117.0_Linux-64bit.deb
  deploy_to_s3: &deploy_to_s3
    run:
      name: Upload to S3 
      command: |
        echo "Copying files to server..."
        aws s3 sync public/ "s3://$S3_BUCKET_NAME" --size-only --exclude "*" --include "*.*" --delete
        echo "Copying files with content type..."
        aws s3 sync public/ "s3://$S3_BUCKET_NAME" --size-only --content-type text/html --exclude "*.*"
  clear_cloudfront_cache: &clear_cloudfront_cache
    run:
      name: Clear CloudFront Cache
      command: |
        aws cloudfront create-invalidation --distribution-id "$CLOUD_FRONT_DIST_ID" --paths '/*'

jobs:
  build:
    <<: *defaults
    docker:
      - image: cimg/base:stable # Use a base image suitable for Hugo and general build needs
    steps:
      - checkout
      - restore_cache:
          keys:
            - hugo-v1-{{ checksum "config.toml" }}
            - hugo-v1-fallback
      - *install_hugo
      - run:
          name: Hugo Build
          command: hugo --environment production
      - save_cache:
          key: hugo-v1-{{ checksum "config.toml" }}
          paths:
            - public/
      - persist_to_workspace:
          root: ./
          paths:
            - public

  deploy_staging:
    <<: *defaults
    docker:
      - image: circleci/python:3.9
    environment:
      S3_BUCKET_NAME: ${BUCKET_NAME_STAGING}
      CLOUD_FRONT_DIST_ID: ${CLOUD_FRONT_DIST_ID_STAGING}
    steps:
      - attach_workspace:
          at: ./
      - *install_awscli
      - *add_aws_credentials
      - *deploy_to_s3
      - *clear_cloudfront_cache

  deploy_production:
    <<: *defaults
    docker:
      - image: circleci/python:3.9
    environment:
      S3_BUCKET_NAME: ${BUCKET_NAME_PRODUCTION}
      CLOUD_FRONT_DIST_ID: ${CLOUD_FRONT_DIST_ID_PRODUCTION}
    steps:
      - attach_workspace:
          at: ./
      - *install_awscli
      - *add_aws_credentials
      - *deploy_to_s3
      - *clear_cloudfront_cache

workflows:
  version: 2
  test-deploy:
    jobs:
      - build
      - deploy_staging:
          requires:
            - build
          filters:
            branches:
              only: main
      - confirm_deploy:
          type: approval
          requires:
            - deploy_staging
      - deploy_production:
          requires:
            - confirm_deploy
